{
  "comments": [
    {
      "key": {
        "uuid": "ba65a107_6e5f9073",
        "filename": "src/profilemodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1162,
      "author": {
        "id": 11
      },
      "writtenOn": "2016-03-30T20:33:05Z",
      "side": 1,
      "message": "You might want to check if an account is selected, then get that account profile. That way, you will always get a Person* instead of just when a profile is selected? (I personally fixed that client side, but it would be nice to have it in LRC)",
      "revId": "6beb20f226065a4edfccc580b77041ba74821fc6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_8ec78412",
        "filename": "src/profilemodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1162,
      "author": {
        "id": 8
      },
      "writtenOn": "2016-03-30T21:18:32Z",
      "side": 1,
      "message": "What happens if we want to edit a profile? We click on it, it gets selected, but when the UI will try to use this helper to update itself, it will not be synchronized. Instead you will get the profile of the last account selected (which may differ)",
      "parentUuid": "ba65a107_6e5f9073",
      "revId": "6beb20f226065a4edfccc580b77041ba74821fc6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_4ed16ccc",
        "filename": "src/profilemodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1162,
      "author": {
        "id": 11
      },
      "writtenOn": "2016-03-30T21:21:21Z",
      "side": 1,
      "message": "Good point. So far I am quite sure I fixed all of those issues in the KDE client. Profiles currently work quite well, your probably right it is a better idea to leave the clients handle this themselves to avoid such issue.",
      "parentUuid": "ba65a107_8ec78412",
      "revId": "6beb20f226065a4edfccc580b77041ba74821fc6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}