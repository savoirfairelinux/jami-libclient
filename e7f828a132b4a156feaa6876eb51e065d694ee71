{
  "comments": [
    {
      "key": {
        "uuid": "9a6a9dd7_5da12ba8",
        "filename": "src/account.h",
        "patchSetId": 11
      },
      "lineNbr": 520,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-06-06T19:35:19Z",
      "side": 1,
      "message": "hmm, this is not very LRC like, thought I\u0027m having a bit of trouble deciding how this should be done, mostly because most things in LRC are either object properties/states or else actions which change the properties/states of the object...\n\nThus, I\u0027m wondering if it would make more sense, in terms of LRC, to automatically call this daemon method (testAccountICEInitialization) any time that the account credentials (SIP, STUN, or TURN) are updates and then add an \"ICE initialization success\" property, or something like that, which can be queried. This way this property could also be accessed via the AccountModel as well.\n\nWe could still have a method which lets the user force an ICE check at any time, since its possible for the TURN server or internet to be momentarily down or something.",
      "range": {
        "startLine": 520,
        "startChar": 6,
        "endLine": 520,
        "endChar": 65
      },
      "revId": "e7f828a132b4a156feaa6876eb51e065d694ee71",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a6a9dd7_fd911f53",
        "filename": "src/account.h",
        "patchSetId": 11
      },
      "lineNbr": 520,
      "author": {
        "id": 66
      },
      "writtenOn": "2016-06-06T19:49:45Z",
      "side": 1,
      "message": "Calling this method can take time, I don\u0027t know if we want to call it every time the settings are updated.\n\nYour concern about connectivity is also true. It could be that I am setting up my ring account but cannot access my TURN server from my current location.",
      "parentUuid": "9a6a9dd7_5da12ba8",
      "range": {
        "startLine": 520,
        "startChar": 6,
        "endLine": 520,
        "endChar": 65
      },
      "revId": "e7f828a132b4a156feaa6876eb51e065d694ee71",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a6a9dd7_fd9fdf4e",
        "filename": "src/account.h",
        "patchSetId": 11
      },
      "lineNbr": 520,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-06-06T20:30:49Z",
      "side": 1,
      "message": "\u003e Calling this method can take time, I don\u0027t know if we want to call it every time the settings are updated.\n\nYes, you\u0027re right. I guess ideally maybe there should be a non-blocking version of this call the result of which is sent from the daemon via a signal. For now we\u0027ll just do it this way.\n\nHowever, you should rename the method to just \"testICEInitialization()\", since its already in the Account class. Also, I think the QPair should either be a \u003cbool, QString\u003e or and \u003cenum, Qstring\u003e, where the enum is one which is defined in account.h and is basically a copy of whats in dring/account_const.h, so that the clients know what the statuses mean.",
      "parentUuid": "9a6a9dd7_fd911f53",
      "range": {
        "startLine": 520,
        "startChar": 6,
        "endLine": 520,
        "endChar": 65
      },
      "revId": "e7f828a132b4a156feaa6876eb51e065d694ee71",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a6a9dd7_00102c4d",
        "filename": "src/account.h",
        "patchSetId": 11
      },
      "lineNbr": 520,
      "author": {
        "id": 66
      },
      "writtenOn": "2016-06-07T19:28:22Z",
      "side": 1,
      "message": "I think I made it a bool when you were writing your comment haha.\n\nAs of patch set 12, it is a bool.\n\nI didn\u0027t really like copying the enum over :(, but I will do that if it is prefered over a bool.",
      "parentUuid": "9a6a9dd7_fd9fdf4e",
      "range": {
        "startLine": 520,
        "startChar": 6,
        "endLine": 520,
        "endChar": 65
      },
      "revId": "e7f828a132b4a156feaa6876eb51e065d694ee71",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a6a9dd7_2020d09a",
        "filename": "src/account.h",
        "patchSetId": 11
      },
      "lineNbr": 520,
      "author": {
        "id": 66
      },
      "writtenOn": "2016-06-07T19:30:31Z",
      "side": 1,
      "message": "\u003e testICEInitialization()\n\ndone",
      "parentUuid": "9a6a9dd7_fd9fdf4e",
      "range": {
        "startLine": 520,
        "startChar": 6,
        "endLine": 520,
        "endChar": 65
      },
      "revId": "e7f828a132b4a156feaa6876eb51e065d694ee71",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}