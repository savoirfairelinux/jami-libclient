{
  "comments": [
    {
      "key": {
        "uuid": "ba65a107_6510ff4e",
        "filename": "src/media/textrecording.cpp",
        "patchSetId": 25
      },
      "lineNbr": 40,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-04T17:20:16Z",
      "side": 1,
      "message": "extra new line",
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_a50e1733",
        "filename": "src/media/textrecording.h",
        "patchSetId": 25
      },
      "lineNbr": 65,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-04T17:20:16Z",
      "side": 1,
      "message": "this is kinda weird? why not just have a \"Status\" role which exposes the same (or similar) roles given by the daemon... otherwise if you check \"HasSucceeded\" it could be \u0027false\u0027 because it still sending, or because it failed, or (later) because it was read, so you need additional layers of conditionals to know what the actual status is..",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 28
      },
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_65379fe4",
        "filename": "src/media/textrecording.h",
        "patchSetId": 25
      },
      "lineNbr": 65,
      "author": {
        "id": 8
      },
      "writtenOn": "2016-05-04T17:34:49Z",
      "side": 1,
      "message": "Well, if you look at how it was two patchsets ago you will find just what you are saying. But problem is, the message states enum in the daemon is not accessible in the client, only in the private part of LRC.\n\nThis means that if LRC transfers the int received from the daemon to the client, the client can\u0027t compare the status value to the one in the daemon.\n\ntwo solutions: \n- first expose daemon headers to the client. I don\u0027t really know how this could be done and if this is a good idea. It would be ok to expose only contants I guess, not whole API.\n- Make LRC respond to \u0027yes/no\u0027 question like I did. Easier to do, but more frustrating in a way.",
      "parentUuid": "ba65a107_a50e1733",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 28
      },
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_c5822b52",
        "filename": "src/media/textrecording.h",
        "patchSetId": 25
      },
      "lineNbr": 65,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-04T18:13:14Z",
      "side": 1,
      "message": "third solution: create another enum in LRC corresponding to the one in the daemon (like its done for the call states)",
      "parentUuid": "ba65a107_65379fe4",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 28
      },
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_45137b5c",
        "filename": "src/private/textrecording_p.h",
        "patchSetId": 25
      },
      "lineNbr": 25,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-04T17:20:16Z",
      "side": 1,
      "message": "extra new line",
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_e552cf12",
        "filename": "src/private/textrecording_p.h",
        "patchSetId": 25
      },
      "lineNbr": 25,
      "author": {
        "id": 8
      },
      "writtenOn": "2016-05-04T17:39:46Z",
      "side": 1,
      "message": "not sure to understand.\nthere was a line between :\n24: #include \u003cmedia/media.h\u003e\n25:\n26: class SerializableEntityManager;\n\nnow we have:\n24: #include \u003cmedia/media.h\u003e\n25:\n26: #include \u003caccount_const.h\u003e\n27:\n28:class SerializableEntityManager;\n\nI think I see what you mean. But media/media.h is not from the daemon but from LRC. It feels normal to separate them.\n\nI will fix this by replacing \u003c \u003e by \" \" for the media line",
      "parentUuid": "ba65a107_45137b5c",
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_051d8366",
        "filename": "src/private/textrecording_p.h",
        "patchSetId": 25
      },
      "lineNbr": 78,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-04T17:20:16Z",
      "side": 1,
      "message": "should be an enum",
      "range": {
        "startLine": 78,
        "startChar": 3,
        "endLine": 78,
        "endChar": 43
      },
      "revId": "4911eaf9bd8fc08c53ac910a6fa07c46ac4468d8",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}