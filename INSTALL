Installation Instructions
*************************

Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005 Free
Software Foundation, Inc.

This file is free documentation; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.

Basic Installation
==================

These are generic installation instructions.

To install the appplication, type the following commands in a console, while in the root directory of this application:

	mkdir -p build
	cd build
	cmake ..
        	The following options are often usefull to append to the cmake line:
                -DRING_BUILD_DIR=<daemon install location>
                -DRING_XML_INTERFACES_DIR=<daemon dbus interface definitions directory>
                -DCMAKE_INSTALL_PREFIX=<install location>
                -DCMAKE_BUILD_TYPE=<Debug to compile with debug symbols>
                -DENABLE_VIDEO=<False to disable video support>
	make -jx # where x is the number of core you have
	make install

Explanation
==================

This script will configure and prepare the compilation and installation of the program and correctly link it against Ring daemon.

All needed files will be built in "build" directory.
So you have to go to this directory:

	cd build

Then execute the Makefile, to compile the application (src, doc...)

	make

Then install it all using:

	make install

You have to use "sudo" to be able to install the program in a protected directory (which is the case by default and most of the time).
Therefore it will ask for your system password.

OS X Install
============

# Install necessary tools:
brew install cmake
brew install qt5
export CMAKE_PREFIX_PATH=<path_to_qt5>

hint: default install location with HomeBrew is /usr/local/Cellar/qt5

# First make sure you have built ring daemon for OS X.

mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=<install_dir_of_daemon> [-DCMAKE_BUILD_TYPE=Debug for compiling with debug symbols]
make install

You can now link and build the OSX client with Ring daemon and LRC library

Testing
=======

Tests are written in the `test` directory.
To run tests, you need to rebuild the application with these commands (from the root directory of the project):

	mkdir -p build-test
	cd build-test
	cmake .. -DENABLE_TEST=true
        	The following options are often usefull to append to the cmake line:
                -DRING_BUILD_DIR=<daemon install location>
                -DRING_XML_INTERFACES_DIR=<daemon dbus interface definitions directory>
                -DCMAKE_INSTALL_PREFIX=<install location>
                -DCMAKE_BUILD_TYPE=<Debug to compile with debug symbols>
                -DENABLE_VIDEO=<False to disable video support>
	make -jx # where x is the number of core you have
	make test # or ./LRCTester for more verbosity.

In the `test` directory you can also find a `mocks` folder used to simulate the ring daemon.
`CppUnit` is the testing library used for this project.


Internationalization
====================

To regenerate strings for translations we use lupdate (within root of the project)

lupdate ./src/ -source-language en -ts translations/lrc_en.ts

Hint: On OSX lupdate is installed with Qt in /usr/local/Cellar/qt5/5.5.0/bin/ when installed with HomeBrew
