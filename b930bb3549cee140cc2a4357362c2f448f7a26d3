{
  "comments": [
    {
      "key": {
        "uuid": "7aade967_37f3370c",
        "filename": "src/recentmodel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 23
      },
      "writtenOn": "2017-04-12T18:06:39Z",
      "side": 1,
      "message": "hmm, I\u0027m confused, in what case would the account of the ContatMethod be the same as the chosen account, but the protocol hint not be compatible with the protocol?\n\nI guess if somewhere we set the account of a CM without checking if the URI is compatible with the account protocol... In this case though, I think that is a bug. We should not, for example, assign a Ring account to a SIP URI. Though there can also be ambiguities, eg: if a SIP URI doesn\u0027t contain \"sip:\" it could be both a valid SIP URI and a valid Ring username.\n\nIn any case, it doesn\u0027t seem right to only fix this ambiguity locally in the RecentModel. We should either not give the wrong account type to a CM, or this sort of comparator should be part of the CM and/or Account API.",
      "range": {
        "startLine": 1182,
        "startChar": 19,
        "endLine": 1183,
        "endChar": 85
      },
      "revId": "b930bb3549cee140cc2a4357362c2f448f7a26d3",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_970a2bd1",
        "filename": "src/recentmodel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 83
      },
      "writtenOn": "2017-04-12T20:11:48Z",
      "side": 1,
      "message": "let say, \n\n- you have two ring accounts : #34 #67\n- you have a contact added from a collection like evolution, wich mean it has no account associated\n\nif we do the comparaison only on the accounts, the contact will never be visible by anybody\n\nif we do the comparaison only on the protocol, contact with an account associated to #34 will be shown when #67 is chosen.\n\nI may have wrong or forgetting something, but I did a lot of tests to ensure to not breaking something...",
      "parentUuid": "7aade967_37f3370c",
      "range": {
        "startLine": 1182,
        "startChar": 19,
        "endLine": 1183,
        "endChar": 85
      },
      "revId": "b930bb3549cee140cc2a4357362c2f448f7a26d3",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_9731cba4",
        "filename": "src/recentmodel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 23
      },
      "writtenOn": "2017-04-12T20:23:23Z",
      "side": 1,
      "message": "but the comparison you do here is an \"AND\", so it both has to match the account AND the protocol... if you say that the issue is that this check fails:\ncm-\u003eaccount() \u003d\u003d chosen_account\n\nthen it doesn\u0027t matter if the other one passes, the result is still false...\n\nshould it not be then:\ncm-\u003eaccount() \u003d\u003d chosen_account) or compareProtocols(chosen_account-\u003eprotocol(),cm-\u003eprotocolHint())",
      "parentUuid": "7aade967_970a2bd1",
      "range": {
        "startLine": 1182,
        "startChar": 19,
        "endLine": 1183,
        "endChar": 85
      },
      "revId": "b930bb3549cee140cc2a4357362c2f448f7a26d3",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}