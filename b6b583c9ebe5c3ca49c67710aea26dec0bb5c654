{
  "comments": [
    {
      "key": {
        "uuid": "ba65a107_579c8a69",
        "filename": "src/ciphermodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 32
      },
      "writtenOn": "2016-05-13T19:16:07Z",
      "side": 0,
      "message": "Are you sure we can supress all of that ?? I\u0027m not sure it\u0027s just for the IP2IP",
      "range": {
        "startLine": 53,
        "startChar": 1,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "b6b583c9ebe5c3ca49c67710aea26dec0bb5c654",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_9779c231",
        "filename": "src/ciphermodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-05-13T19:21:44Z",
      "side": 0,
      "message": "well... loadCiphers() is dead code... its not used anywhere... the other code does getSupportedCiphers() on IP2IP account, and the daemon will return nothing (you can check the daemon code, it will even log an error) so its useless",
      "parentUuid": "ba65a107_579c8a69",
      "range": {
        "startLine": 53,
        "startChar": 1,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "b6b583c9ebe5c3ca49c67710aea26dec0bb5c654",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba65a107_b7996670",
        "filename": "src/ciphermodel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 32
      },
      "writtenOn": "2016-05-13T19:24:02Z",
      "side": 0,
      "message": "Ok just had to be sure",
      "parentUuid": "ba65a107_9779c231",
      "range": {
        "startLine": 53,
        "startChar": 1,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "b6b583c9ebe5c3ca49c67710aea26dec0bb5c654",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}